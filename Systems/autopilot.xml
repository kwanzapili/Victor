<?xml version="1.0" encoding="UTF-8"?>

<!--
    Handley page Victor B.2/K.2 Autopilot Configuration
    (partly based on the 707)
-->

<PropertyList>

    <!-- =============================================================== -->
    <!-- Prediction and offset filters                                   -->
    <!-- =============================================================== -->

    <!--
	It is important to use consistent properties when evaluating height,
	direction or speed. If the JSBsim system files use the corresponding
	JSBsim properties, then we must use the FG properties given in
	"position/*", "orientation/*" and "velocities/*".. In general, the
	JSBsim or FG propserteies are more accurate than those derived from
	instruments. The instrument poerteies may be more "realistic" in
	that they represent real-world errors. We will default to using
	FG peroperties except when sampling.

	We will NOT use the output of the Directional Gyro to derive the heading
	error for "heading" and "nav1" modes. These are:
	"/instrumentation/heading-indicator-dg/heading-bug-error-deg" and
	"/instrumentation/heading-indicator-dg/nav1-course-error-deg"
	NB/ Nav1 is based on the "selected-deg" so we use another one based on
	"target-auto-hdg-deg".
    -->

    <!-- Calculate "heading-bug" error -->
    <filter>
	<name>Heading Bug Error Computer</name>
	<debug>false</debug>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/autopilot/settings/heading-bug-deg</property>
	    <offset>
		<property>/orientation/heading-deg</property>
		<scale>-1.0</scale>
	    </offset>
	</input>
	<output>/autopilot/internal/heading-bug-error-deg</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
	<gain>1.0</gain>
    </filter>

    <!-- Calculate "nav1-heading" error -->
    <filter>
	<name>Nav1 Heading Error Computer</name>
	<debug>false</debug>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/instrumentation/nav[0]/radials/target-auto-hdg-deg</property>
	    <offset>
		<property>/orientation/heading-deg</property>
		<scale>-1.0</scale>
	    </offset>
	</input>
	<output>/autopilot/internal/nav1-heading-error-deg</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
	<gain>1.0</gain>
    </filter>

    <!-- Calculate "true-heading" error -->
    <filter>
	<name>True Heading Error Computer</name>
	<debug>false</debug>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/autopilot/settings/true-heading-deg</property>
	    <offset>
		<property>/orientation/heading-deg</property>
		<scale>-1.0</scale>
	    </offset>
	</input>
	<output>/autopilot/internal/true-heading-error-deg</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
	<gain>1.0</gain>
    </filter>

    <!-- Calculate "tacan-heading" error -->
    <filter>
	<name>Tacan Heading Error Computer</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autopilot-engage</property>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>tacan-hold</value>
		</equals>
	    </condition>
	</enable>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/instrumentation/tacan/indicated-bearing-true-deg</property>
	    <offset>
		<property>/orientation/heading-deg</property>
		<scale>-1.0</scale>
	    </offset>
	</input>
	<output>/autopilot/internal/tacan-heading-error-deg</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
	<gain>1.0</gain>
    </filter>

    <!--
	Compute the runway heading in preparation for touch down.
	After touch down, the user can change course by adjusting the heading
	bug as necessary.
    -->
    <filter>
	<name>Runway Heading Computer</name>
	<debug>false</debug>
	<type>gain</type>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autopilot-engage</property>
		<equals>
		    <property>/instrumentation/fmc/flight-mode</property>
		    <value>9</value>   <!-- flare phase -->
		</equals>
		<!-- fix the value after actual flare -->
		<not>
		    <property>/instrumentation/fmc/flight-control-flare-mode</property>
		</not>
	    </condition>
	</enable>
	<gain>1.0</gain>
	<!-- use the LOCaliser radials when we have a lock -->
	<input>
	    <condition>
		<property>/instrumentation/flightdirector/loc-enable</property>
	    </condition>
	    <property>/instrumentation/nav[0]/radials/target-radial-deg</property>
	</input>
	<!-- Source from the GPS if available -->
	<input>
	    <condition>
		<property>/instrumentation/gps/wp/wp[1]/valid</property>
	    </condition>
	    <property>/instrumentation/gps/wp/wp[1]/bearing-true-deg</property>
	</input>
	<!-- Otherwise use the current setting in the heading bug -->
	<input>
	    <property>/instrumentation/heading-indicator/heading-bug-deg</property>
	</input>
	<output>/autopilot/internal/runway-heading-deg</output>
	<period>
	    <min>  0 </min>
	    <max> 360</max>
	</period>
    </filter>

    <!-- Calculate "runway-heading" error -->
    <filter>
	<name>Runway Heading Error Computer</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autopilot-engage</property>
		<greater-than-equals>
		    <property>/instrumentation/fmc/flight-mode</property>
		    <value>9</value>   <!-- flare phase -->
		</greater-than-equals>
	    </condition>
	</enable>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/autopilot/internal/runway-heading-deg</property>
	    <offset>
		<property>/orientation/heading-deg</property>
		<scale>-1.0</scale>
	    </offset>
	</input>
	<output>/autopilot/internal/runway-heading-error-deg</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
	<gain>1.0</gain>
    </filter>

    <!--
	For "nav1-heading" we predict the error	a few seconds ahead so as to avoid
	overshooting. For "true-heading" and "heading-bug", the autopilot performs
	much better with the raw unpredicted values perhaps because of the quick
	response generated by the elevons. However, it is critical to limit the rate
	of change of roll, otherwise instability will result. The "tacan-heading" and
	"runway-modes" do not need this in general.

	The "filter-gain" is the smoothing factor alpha. Larger values of alpha actually
	reduce the level of smoothing, and in the limiting case with alpha = 1 the output
	series is just the current observation. Values of alpha close to one have less of
	a smoothing effect and give greater weight to recent changes in the data, while
	values of alpha closer to zero have a greater smoothing effect and are less
	responsive to recent changes.
    -->

    <predict-simple>
	<name>NAV1 Error Prediction</name>
	<debug>false</debug>
	<input>/autopilot/internal/nav1-heading-error-deg</input>
	<output>/autopilot/internal/nav1-heading-error-lookahead-deg</output>
	<seconds>5.0</seconds>
	<filter-gain>0.1</filter-gain>	<!-- 10% of current value -->
    </predict-simple>

    <!--
	Heading offset is computed from all the above errors and predictions
	based on the relevant mode.
    -->
    <filter>
	<name>Heading Offset Computer</name>
	<debug>false</debug>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>dg-heading-hold</value>
		</equals>
	    </condition>
	    <property>/autopilot/internal/heading-bug-error-deg</property>
	</input>
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>nav1-hold</value>
		</equals>
	    </condition>
	    <property>/autopilot/internal/nav1-heading-error-lookahead-deg</property>
	</input>
	<input>
	    <!-- Runway mode -->
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>runway-heading</value>
		</equals>
	    </condition>
	    <property>/autopilot/internal/runway-heading-error-deg</property>
	</input>
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>tacan-hold</value>
		</equals>
	    </condition>
	    <property>/autopilot/internal/tacan-heading-error-deg</property>
	</input>
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>true-heading-hold</value>
		</equals>
	    </condition>
	    <property>/autopilot/internal/true-heading-error-deg</property>
	</input>
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>wing-leveler</value>
		</equals>
	    </condition>
	    <property>/instrumentation/turn-indicator/indicated-turn-rate</property>
	</input>
	<!-- default is to "assume" the current heading is correct -->
	<input> 0.0 </input>
	<output>/autopilot/internal/heading-offset-deg-unfiltered</output>
	<period>
	    <min>-180</min>
	    <max> 180</max>
	</period>
    </filter>

    <!-- limit change of 'heading-offset-deg' -->
    <filter>
	<name>Heading offset filter</name>
	<debug>false</debug>
	<type>noise-spike</type>
	<input>/autopilot/internal/heading-offset-deg-unfiltered</input>
	<output>/autopilot/internal/heading-offset-deg</output>
	<max-rate-of-change>10.0</max-rate-of-change>
    </filter>

    <!-- ~~~~~~~~~~ Speed Predictions and Errors ~~~~~~~~~~ -->

    <filter>
	<name>Airspeed error - knots</name>
	<type>gain</type>
	<gain>1.0</gain>
	<input>
	    <property>/velocities/airspeed-kt</property>
	</input>
	<reference>
	    <property>/autopilot/settings/target-speed-kt</property>
	</reference>
	<output>/autopilot/internal/speed-error-kt</output>
    </filter>

    <filter>
	<name>Airspeed error - mach x 10</name>
	<type>gain</type>
	<gain>10.0</gain>
	<input>
	    <property>/velocities/mach</property>
	</input>
	<reference>
	    <property>/autopilot/settings/target-speed-mach</property>
	</reference>
	<output>/autopilot/internal/speed-error-mach-x10</output>
    </filter>


    <!-- =============================================================== -->
    <!-- Roll Axis Modes                                                 -->
    <!-- =============================================================== -->

    <!--
	**************************************************************
	Three-stage cascade controller for all heading modes:
	Wing Leveler / Heading Bug Hold / True Heading Hold / NAV1 /
	Tacan Hold.
	**************************************************************
    -->

    <!--
	Stage #1 sets target roll based on difference between current heading or
	heading bug and target heading or turn indicator.
    -->
    <pi-simple-controller>
	<name>Stage 1 - Target Roll Computer</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/autopilot/internal/lateral-mode-engaged</property>
	    </condition>
	</enable>
	<!-- input was filtered above for the correct heading mode -->
	<input>/autopilot/internal/heading-offset-deg</input>
	<reference>0.0</reference>
	<output>
	    <property>/autopilot/internal/target-roll-deg-unfiltered</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-heading-deg</Kp>
	    <u_min>/instrumentation/fmc/bank-angle/limit-min</u_min>
	    <u_max>/instrumentation/fmc/bank-angle/limit-max</u_max>
	</config>
    </pi-simple-controller>

    <!-- limit change of 'target-roll-deg': necessary for delta wings -->
    <filter>
	<name>Heading roll filter</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<type>noise-spike</type>
	<enable>
	    <condition>
		<property>/autopilot/internal/lateral-mode-engaged</property>
	    </condition>
	</enable>
	<initialize-to>output</initialize-to>
	<!-- For runway mode, we do not want any roll, just yaw. -->
	<input>
	    <condition>
		<or>
		    <equals>
			<property>/autopilot/locks/heading</property>
			<value>runway-heading</value>
		    </equals>
		    <!-- this only applies in ground mode -->
		    <property>/instrumentation/fmc/flight-control-ground-mode</property>
		</or>
	    </condition>
	    <value> 0.0 </value>
	</input>
	<input>/autopilot/internal/target-roll-deg-unfiltered</input>
	<output>/autopilot/internal/target-roll-deg</output>
	<max-rate-of-change>7.0</max-rate-of-change>
    </filter>

    <!-- Stage #2a drives the ailerons(-servo) to achieve the desired roll deg. -->
    <pid-controller>
	<name>Heading Hold - Stage 2A</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/autopilot/internal/lateral-mode-engaged</property>
	    </condition>
	</enable>
	<input>
	    <property>/orientation/roll-deg</property>
	</input>
	<reference>
	    <property>/autopilot/internal/target-roll-deg</property>
	</reference>
	<output>
	    <property>/autopilot/internal/aileron-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-heading-hold</Kp>
	    <!-- proportional gain -->
	    <beta>1.0</beta>
	    <!-- input value weighting factor -->
	    <alpha>0.1</alpha>
	    <!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>
	    <Ti>/autopilot/internal/ti-for-heading-hold</Ti>
	    <Td>/autopilot/internal/td-for-heading-hold</Td>
	    <u_min>-1.0</u_min>
	    <u_max> 1.0</u_max>
	</config>
    </pid-controller>

    <!-- Stage #2b drives the rudder in order to do the actual roll. -->
    <pi-simple-controller>
	<name>Heading Hold - Stage 2B</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<and>
		    <!-- Gear[0] is for the front gear, gear[1]+[2] for the maingear. -->
		    <not><property>/gear/gear[0]/wow</property></not>
		    <!-- runway heading mode drives the rudder seperately -->
		    <not-equals>
			<property>/autopilot/locks/heading</property>
			<value>runway-heading</value>
		    </not-equals>
		    <property>/autopilot/internal/lateral-mode-engaged</property>
		</and>
	    </condition>
	</enable>
	<input>
	    <property>/orientation/roll-deg</property>
	</input>
	<reference>0.0</reference>
	<output>
	    <property>/autopilot/internal/rudder-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-roll-deg</Kp>
	    <u_min>-0.5</u_min>
	    <u_max> 0.5</u_max>
	</config>
    </pi-simple-controller>

    <!-- Runway Mode: active when the above filter is deactivated. -->
    <pid-controller>
	<name>Runway Hold</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autopilot-engage</property>
		<equals>
		    <property>/autopilot/locks/heading</property>
		    <value>runway-heading</value>
		</equals>
		<!-- this applies from flare until touchdown -->
	    </condition>
	</enable>
	<input>
	    <property>/autopilot/internal/heading-offset-deg</property>
	</input>
	<reference>0.0</reference>
	<output>
	    <property>/autopilot/internal/rudder-servo</property>
	</output>
	<config>
	    <Kp>-0.05</Kp>       <!-- proportional gain -->
	    <beta>1.0</beta>     <!-- input value weighting factor -->
	    <alpha>0.1</alpha>   <!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>   <!-- input value weighting factor for -->
	    <Ti>5.0</Ti>
	    <Td>0.001</Td>
	    <u_min>-0.6</u_min>  <!-- minimum output clamp -->
	    <u_max> 0.6</u_max>  <!-- maximum output clamp -->
	</config>
    </pid-controller>


    <!-- =============================================================== -->
    <!-- Pitch Axis Modes                                                -->
    <!-- =============================================================== -->

    <!-- Set mode number for use in JSBsim switches -->
    <filter>
	<name>Pitch axis mode</name>
	<debug>false</debug>
	<type>gain</type>
	<gain> 1 </gain>
	<input>
	    <condition>
		<!-- AGL hold = 1 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>agl-hold</value>
		</equals>
	    </condition>
	    <value> 1 </value>
	</input>
	<input>
	    <condition>
		<!-- AOA hold = 2 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>aoa-hold</value>
		</equals>
	    </condition>
	    <value> 2 </value>
	</input>
	<input>
	    <condition>
		<!-- Altitude hold = 3 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>altitude-hold</value>
		</equals>
	    </condition>
	    <value> 3 </value>
	</input>
	<input>
	    <condition>
		<!-- GS hold = 4 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>gs1-hold</value>
		</equals>
	    </condition>
	    <value> 4 </value>
	</input>
	<input>
	    <condition>
		<!-- Pitch hold = 5 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>pitch-hold</value>
		</equals>
	    </condition>
	    <value> 5 </value>
	</input>
	<input>
	    <condition>
		<!-- Vertical speed hold = 6 -->
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>vertical-speed-hold</value>
		</equals>
	    </condition>
	    <value> 6 </value>
	</input>
	<!-- Default is 0 -->
	<input> 0 </input>
	<output>/autopilot/internal/vertical-mode</output>
    </filter>

    <!-- Altitude / AGL Hold:  Two-stage cascade controllers. -->

    <!--
	Stage #1 sets target rate of climb based on the difference between the
	current altitude / AGL and target altitude / AGL.
	This is computed in JSBsim functions. Here we simply limit the rate of
	change particularly when we enter the modes from "cold". Since the rate
	of change of the pitch is limited to 3 deg/s, this implies at 43 fps/s
	limit for altitude change (3 / Kp).
    -->
    <filter>
	<name>Limit target change rate of altitude</name>
	<type>noise-spike</type>
	<max-rate-of-change>30</max-rate-of-change>
	<!--AGL mode -->
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>agl-hold</value>
		</equals>
	    </condition>
	    <property>/fdm/jsbsim/autopilot/agl-climb-rate-fps</property>
	</input>
	<!--Altitude mode -->
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>altitude-hold</value>
		</equals>
	    </condition>
	    <property>/fdm/jsbsim/autopilot/altitude-climb-rate-fps</property>
	</input>
	<!-- Default is to "sample" current vertical speed -->
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	</input>
	<output>/autopilot/internal/target-climb-rate-fps</output>
    </filter>

    <!--
	Stage #2 Climb-rate-hold: generates a target pitch angle from the difference
	between the current climb-rate and the target climb rate generated by the
	Altitude-hold controller. This drives the elevator-trim filter which is then
	routed via the servo.
    -->

    <pid-controller>
	<name>Altitude / AGL Hold Stage 2</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<or>
		    <equals>
			<property>/autopilot/locks/altitude</property>
			<value>agl-hold</value>
		    </equals>
		    <equals>
			<property>/autopilot/locks/altitude</property>
			<value>altitude-hold</value>
		    </equals>
		</or>
		<not>
		    <property>/autopilot/internal/speed-pitch-mode</property>
		</not>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	</input>
	<reference>
	    <property>/autopilot/internal/target-climb-rate-fps</property>
	</reference>
	<output>
	    <property>/autopilot/internal/vertical-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-alt-hold</Kp> <!-- proportional gain -->
	    <beta>1.0</beta>
	    <alpha>0.1</alpha>
	    <gamma>0.1</gamma>
	    <Ti>2.5</Ti>           <!-- integrator time -->
	    <Td>0.001</Td>         <!-- derivator time -->
	    <u_min>/instrumentation/fmc/limit-pitch-deg-min</u_min>
	    <u_max>/instrumentation/fmc/limit-pitch-deg-max</u_max>
	</config>
    </pid-controller>

    <!-- Fallback for 'speed-with-pitch' - control vspeed with throttle -->
    <pid-controller>
	<name>Altitude-hold with throttle</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<or>
		    <equals>
			<property>/autopilot/locks/altitude</property>
			<value>agl-hold</value>
		    </equals>
		    <equals>
			<property>/autopilot/locks/altitude</property>
			<value>altitude-hold</value>
		    </equals>
		</or>
		<property>/autopilot/internal/speed-pitch-mode</property>
		<property>/instrumentation/flightdirector/autothrottle-engage</property>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	    <scale>0.01</scale>	    <!-- scale down to get a higher value for Kp -->
	</input>
	<reference>
	    <property>/autopilot/internal/target-climb-rate-fps</property>
	    <scale>0.01</scale>	    <!-- scale down to get a higher value for Kp -->
	</reference>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-alt-throttle</Kp>        <!-- proportional gain -->
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->
	    <Ti>5.0</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>0.01</u_min>
	    <u_max>1.00</u_max>
	</config>
    </pid-controller>

    <!--
	********************
	Glideslope filters
	*********************
    -->

    <!-- Filter and correct the descent rate -->
    <filter>
	<name>Glideslope sink rate</name>
	<debug>false</debug>
	<type>gain</type>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>gs1-hold</value>
		</equals>
	    </condition>
	</enable>
	<gain>1.0</gain>
	<input>
	    <condition>
		<!-- in GS - deflection is within 50% of mid-line -->
		<property>/autopilot/internal/gs-intercepted-good</property>
	    </condition>
	    <property>/instrumentation/nav/gs-rate-of-climb</property>
	</input>
	<input>
	    <condition>
		<!-- GS - deflection is weak (50% - 95%) beyond mid-line -->
		<property>/autopilot/internal/gs-intercepted-weak</property>
	    </condition>
	    <expression>
		<sum>
		    <!-- a sink rate adjustment is computed in JSBsim -->
		    <property>/fdm/jsbsim/autopilot/gs-sink-rate-adjust</property>
		    <property>/instrumentation/nav/gs-rate-of-climb</property>
		</sum>
	    </expression>
	</input>
	<!-- default value set in FCS: this is the same as the minimum -->
	<input>/autopilot/internal/gs-sink-rate-fps</input>
	<output>
	    <property>/autopilot/internal/gs-rate-of-climb-filtered</property>
	</output>
	<u_min>/autopilot/internal/gs-sink-rate-fps</u_min>
    </filter>

    <!-- Glideslope hold. -->
    <pid-controller>
	<name>Glideslope Hold</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>gs1-hold</value>
		</equals>
		<not>
		    <property>/autopilot/internal/speed-pitch-mode</property>
		</not>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	</input>
	<reference>
	    <property>/autopilot/internal/gs-rate-of-climb-filtered</property>
	</reference>
	<output>
	    <property>/autopilot/internal/vertical-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-gs-hold</Kp>
	    <beta>1.0</beta>
	    <alpha>0.1</alpha>
	    <gamma>0.0</gamma>
	    <Ti>2.5</Ti>
	    <Td>0.001</Td>
	    <u_min>/instrumentation/fmc/limit-pitch-deg-min</u_min>
	    <u_max>/instrumentation/fmc/limit-pitch-deg-max</u_max>
	</config>
    </pid-controller>

    <!-- Fallback for 'speed-with-pitch' - control vspeed with throttle -->
    <pid-controller>
	<name>GS-hold with throttle</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>gs1-hold</value>
		</equals>
		<property>/autopilot/internal/speed-pitch-mode</property>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	    <scale>0.01</scale>	    <!-- scale down to get a higher value for Kp -->
	</input>
	<reference>
	    <property>/autopilot/internal/gs-rate-of-climb-filtered</property>
	    <scale>0.01</scale>	    <!-- scale down to get a higher value for Kp -->
	</reference>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-gs-hold-thr</Kp>        <!-- proportional gain -->
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->
	    <Ti>2.5</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>0.01</u_min>
	    <u_max>1.0</u_max>
	</config>
    </pid-controller>


    <!--
	**************************************************************************
	Vertical speed hold: generates a target pitch angle from the difference
	between the current climb-rate and the target climb rate specified in the
	settings.
	***************************************************************************
    -->

    <pid-controller>
	<name>Vertical Speed Hold</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>vertical-speed-hold</value>
		</equals>
		<not>
		    <property>/autopilot/internal/speed-pitch-mode</property>
		</not>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	</input>
	<reference>
	    <property>/autopilot/internal/settings/vertical-speed-fps</property>
	</reference>
	<output>
	    <property>/autopilot/internal/vertical-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-vs-hold</Kp>      <!-- proportional gain -->
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->
	    <Ti>2.5</Ti>	<!-- integrator time -->
	    <Td>0.001</Td>	<!-- derivator time -->
	    <u_min>/instrumentation/fmc/limit-pitch-deg-min</u_min>
	    <u_max>/instrumentation/fmc/limit-pitch-deg-max</u_max>
	</config>
    </pid-controller>

    <!-- Fallback for 'speed-with-pitch' - control vspeed with throttle -->
    <pid-controller>
	<name>VSpeed-hold with throttle</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>vertical-speed-hold</value>
		</equals>
		<property>/autopilot/internal/speed-pitch-mode</property>
		<property>/instrumentation/flightdirector/autothrottle-engage</property>
	    </condition>
	</enable>
	<input>
	    <property>/velocities/vertical-speed-fps</property>
	</input>
	<reference>
	    <property>/autopilot/internal/settings/vertical-speed-fps</property>
	</reference>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-vs-hold-thr</Kp>
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->
	    <Ti>2.5</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>0.01</u_min>
	    <u_max>1.00</u_max>
	</config>
    </pid-controller>


    <!--
	****************************
	Simple angle of attack hold
	*****************************
    -->
    <pid-controller>
	<name>AOA hold</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>aoa-hold</value>
		</equals>
	    </condition>
	</enable>
	<input>
	    <property>/orientation/alpha-deg</property>
	</input>
	<reference>
	    <property>/autopilot/settings/target-aoa-deg</property>
	</reference>
	<output>
	    <property>/autopilot/internal/vertical-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-aoa-hold</Kp>
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->
	    <Ti>2.5</Ti>	<!-- integrator time -->
	    <Td>0.001</Td>	<!-- derivator time -->
	    <u_min>/instrumentation/fmc/limit-pitch-deg-min</u_min>
	    <u_max>/instrumentation/fmc/limit-pitch-deg-max</u_max>
	</config>
    </pid-controller>


    <!-- =============================================================== -->
    <!-- Velocity Modes                                                  -->
    <!-- =============================================================== -->

    <pid-controller>
	<name>Auto Throttle</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autothrottle-engage</property>
		<equals>
		    <property>/autopilot/locks/speed</property>
		    <value>speed-with-throttle</value>
		</equals>
		<not-equals>
		    <property>/instrumentation/flightdirector/spd</property>
		    <value>5</value>        <!-- THR IDLE -->
		</not-equals>
	    </condition>
	</enable>
	<input>
	    <property>/autopilot/internal/speed-error-kt</property>
	</input>
	<reference>
	    <value> 0 </value>
	</reference>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-speed-throttle</Kp>
	    <Ti>5.0</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>0.01</u_min>
	    <u_max>1.00</u_max>
	</config>
    </pid-controller>

    <!-- Auto throttle mach -->
    <pid-controller>
	<name>Auto Throttle (MACH)</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autothrottle-engage</property>
		<equals>
		    <property>/autopilot/locks/speed</property>
		    <value>mach-with-throttle</value>
		</equals>
		<not-equals>
		    <property>/instrumentation/flightdirector/spd</property>
		    <value>5</value>        <!-- THR IDLE -->
		</not-equals>
	    </condition>
	</enable>
	<input>
	    <property>/autopilot/internal/speed-error-mach-x10</property>
	</input>
	<reference>
	    <value> 0 </value>
	</reference>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-mach-throttle</Kp>
	    <Ti>10.0</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>0.01</u_min>
	    <u_max>1.00</u_max>
	</config>
    </pid-controller>


    <!-- Idle Thrust: reduce speed gradually from the current throttle position -->
    <filter>
	<name>idle thrust</name>
	<enable>
	    <condition>
		<and>
		    <equals>
			<property>/instrumentation/flightdirector/spd</property>
			<value>5</value>        <!-- THR IDLE -->
		    </equals>
		    <property>/instrumentation/flightdirector/autothrottle-engage</property>
		</and>
	    </condition>
	</enable>
	<type>noise-spike</type>
	<max-rate-of-change>0.35</max-rate-of-change>	<!-- 0.35/sec -->
	<input> 0.01 </input>
	<output>
	    <property>/autopilot/internal/throttle-servo</property>
	</output>
    </filter>


    <!-- =============================================================== -->
    <!-- Speed with pitch: also used in DES mode                         -->
    <!-- =============================================================== -->

    <!-- Step 1 - determine appropriate pitch (within a certain range) -->
    <pid-controller>
	<name>Speed Hold with Pitch Stage 1</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/speed</property>
		    <value>speed-with-pitch-trim</value>
		</equals>
	    </condition>
	</enable>
	<input>
	    <property>/autopilot/internal/speed-error-kt</property>
	</input>
	<reference> 0 </reference>
	<output>
	    <property>/autopilot/internal/settings/target-speed-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-speed-pitch-deg</Kp>
	    <Ti>5.0</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>/autopilot/internal/speed-with-pitch-min</u_min>
	    <u_max>/autopilot/internal/speed-with-pitch-max</u_max>
	</config>
    </pid-controller>

    <pid-controller>
	<name>Mach Hold with Pitch Stage 1</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<equals>
		    <property>/autopilot/locks/speed</property>
		    <value>mach-with-pitch-trim</value>
		</equals>
	    </condition>
	</enable>
	<input>
	    <property>/autopilot/internal/speed-error-mach-x10</property>
	</input>
	<reference> 0 </reference>
	<output>
	    <property>/autopilot/internal/settings/target-speed-pitch-deg</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-mach-pitch-deg</Kp>
	    <Ti>5.0</Ti>        <!-- integrator time -->
	    <Td>0.0001</Td>    <!-- derivator time -->
	    <u_min>/autopilot/internal/speed-with-pitch-min</u_min>
	    <u_max>/autopilot/internal/speed-with-pitch-max</u_max>
	</config>
    </pid-controller>

    <!-- Limit the rate of change of pitch to avoid wild swings -->
    <filter>
	<name>Pitch change limiter for speed modes</name>
	<type>noise-spike</type>
	<max-rate-of-change>1.5</max-rate-of-change>
	<input>/autopilot/internal/settings/target-speed-pitch-deg</input>
	<output>/autopilot/internal/speed-with-pitch-deg</output>
    </filter>


    <!--
	~~~~~~~~~~~~~~~~~~~~~~~~~ Pitch target consolidator ~~~~~~~~~~~~~~~~~~~~~~~~~
	Every mode that needs to control the pitch will feeds its needs into a central
	repository "/autopilot/internal/settings/target-pitch-deg". From there. it
	is filtered into the final destination. Here, we select the correct input
	from the various sourcs.
	*****************************************************************************
    -->

    <!-- Minimum permissible pitch degrees -->
    <filter>
	<name>Minimum pitch degrees</name>
	<type>gain</type>
	<gain>1.0</gain>
	<!-- Speed modes take precedence -->
	<input>
	    <condition>
		<property>/autopilot/internal/speed-pitch-mode</property>
	    </condition>
	    <property>/autopilot/internal/speed-with-pitch-min</property>
	</input>
	<input>
	    <property>/instrumentation/fmc/limit-pitch-deg-min</property>
	</input>
	<output>/autopilot/internal/min-pitch-deg</output>
    </filter>

    <!-- Maximum permissible pitch degrees -->
    <filter>
	<name>Maximum pitch degrees</name>
	<type>gain</type>
	<gain>1.0</gain>
	<!-- Speed modes take precedence -->
	<input>
	    <condition>
		<property>/autopilot/internal/speed-pitch-mode</property>
	    </condition>
	    <property>/autopilot/internal/speed-with-pitch-max</property>
	</input>
	<input>
	    <property>/instrumentation/fmc/limit-pitch-deg-max</property>
	</input>
	<output>/autopilot/internal/max-pitch-deg</output>
    </filter>

    <filter>
	<name>Pitch source selector</name>
	<type>gain</type>
	<gain>1.0</gain>
	<!-- Speed modes take precedence -->
	<input>
	    <condition>
		<property>/autopilot/internal/speed-pitch-mode</property>
	    </condition>
	    <property>/autopilot/internal/speed-with-pitch-deg</property>
	</input>
	<!-- pure "pitch-hold" -->
	<input>
	    <condition>
		<equals>
		    <property>/autopilot/locks/altitude</property>
		    <value>pitch-hold</value>
		</equals>
	    </condition>
	    <property>/instrumentation/flightdirector/pitch-deg</property>
	</input>
	<!-- Vertical modes -->
	<input>
	    <condition>
		<property>/autopilot/internal/vertical-pitch-mode</property>
	    </condition>
	    <property>/autopilot/internal/vertical-pitch-deg</property>
	</input>
	<!-- default to the indicated reading of current pitch -->
	<input>
	    <property>/instrumentation/attitude-indicator/indicated-pitch-deg</property>
	</input>
	<output>/autopilot/internal/settings/target-pitch-deg</output>
	<u_min>/autopilot/internal/min-pitch-deg</u_min>
	<u_max>/autopilot/internal/max-pitch-deg</u_max>
    </filter>

    <!--
	*****************************************************************************
	The pitch-hold controller is quite fast	and will lead to instability in the
	preceding controller if the pitch demand changes too quickly. Hence, we need
	a filter to limit the change in target pitch.
	*****************************************************************************
    -->

    <!-- Filter target pitch for both vertical and speed modes -->
    <filter>
	<name>Pitch change limiter vertical modes</name>
	<type>noise-spike</type>
	<max-rate-of-change>2.0</max-rate-of-change>
	<input>
	    <condition>
		<or>
		    <property>/autopilot/internal/vertical-pitch-mode</property>
		    <property>/autopilot/internal/speed-pitch-mode</property>
		</or>
	    </condition>
	    <property>/autopilot/internal/settings/target-pitch-deg</property>
	</input>
	<!-- Default is to "sample-and-hold" current pitch -->
	<input>/orientation/pitch-deg</input>
	<output>/autopilot/settings/target-pitch-deg</output>
    </filter>

    <!-- Step 2 - uses the pitch-hold-controller to operate the elevator-trim   -->

    <!--
	******************************************************************************
	Pitch-hold Controller for all pitch-linked modes (both vertical and speed:
	generates an elevator deflection from the difference betwen the current pitch
	and the target pitch generated by the climb rate calculators.
	******************************************************************************
    -->

    <!-- Simple pitch hold -->
    <pid-controller>
	<name>Pitch hold</name>
	<debug>false</debug>
	<enable>
	    <condition>
		<or>
		    <property>/autopilot/internal/vertical-pitch-mode</property>
		    <property>/autopilot/internal/speed-pitch-mode</property>
		</or>
	    </condition>
	</enable>
	<input>
	    <property>/orientation/pitch-deg</property>
	</input>
	<reference>
	    <property>/autopilot/settings/target-pitch-deg</property>
	</reference>
	<output>
	    <property>/autopilot/internal/elevator-trim-servo</property>
	</output>
	<config>
	    <Kp>/autopilot/internal/kp-for-pitch-hold</Kp>
	    <beta>1.0</beta>	<!-- input value weighting factor -->
	    <alpha>0.1</alpha>	<!-- low pass filter weighting factor -->
	    <gamma>0.0</gamma>	<!-- input value weighting factor for -->

	    <Ti>3.0</Ti>	<!-- integrator time -->
	    <Td>0.0001</Td>	<!-- derivator time -->
	    <u_min>-1.0</u_min>
	    <u_max> 1.0</u_max>
	</config>
    </pid-controller>

    <!--
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	Autopilot	Pitch		Roll		Yaw
	Max Rates	15°/sec		30°/sec		28°/sec
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    -->

    <!-- =============================================================== -->
    <!-- aileron servo driver.                                           -->
    <!-- =============================================================== -->

    <filter>
	<name>SERVO-DRIVER: aileron</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<type>noise-spike</type>
	<enable>
	    <condition>
		<property>/autopilot/internal/lateral-mode-engaged</property>
		<not>
		    <property>/instrumentation/fmc/flight-control-ground-mode</property>
		</not>
	    </condition>
	</enable>
	<input>/autopilot/internal/aileron-servo</input>
	<output>/controls/flight/aileron</output>
	<max-rate-of-change> 1.25 </max-rate-of-change>	<!-- 30°/sec	 -->
    </filter>

    <!-- =============================================================== -->
    <!-- rudder servo driver.                                            -->
    <!-- =============================================================== -->

    <filter>
	<name>SERVO-DRIVER: rudder heading</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<type>noise-spike</type>
	<enable>
	    <condition>
		<property>/autopilot/internal/lateral-mode-engaged</property>
	    </condition>
	</enable>
	<input>/autopilot/internal/rudder-servo</input>
	<output>/controls/flight/rudder</output>
	<max-rate-of-change> 1.4 </max-rate-of-change>	<!-- 28°/sec -->
    </filter>


    <!-- =============================================================== -->
    <!-- elevator-trim servo driver					 -->
    <!-- =============================================================== -->

    <filter>
	<name>SERVO-DRIVER: elevator-trim</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<type>noise-spike</type>
	<enable>
	    <condition>
		<property>/instrumentation/fmc/roc-lock</property>
	    </condition>
	</enable>
	<input>/autopilot/internal/elevator-trim-servo</input>
	<output>/controls/flight/elevator-trim</output>
	<max-rate-of-change> 0.882352941 </max-rate-of-change>	<!-- 15°/sec -->
    </filter>


    <!-- =============================================================== -->
    <!-- elevator servo driver - adjust elevator based on trim		 -->
    <!-- =============================================================== -->

    <filter>
	<name>SERVO-DRIVER: elevator</name>
	<debug>false</debug>
	<feedback-if-disabled>true</feedback-if-disabled>
	<type>noise-spike</type>
	<!--
	    This filter works when "/instrumentation/fmc/roc-lock" is true.
	    But we check "/autopilot/internal/auto-elevator" instead which
	    slightly lags "/instrumentation/fmc/roc-lock" so that a nasal module
	    has time to zero "/controls/flight/elevator" initially before the
	    automatic calculation takes effect.
	-->
	<enable>
	    <condition>
		<property>/autopilot/internal/auto-elevator</property>
	    </condition>
	</enable>
	<input>/fdm/jsbsim/fcs/elevator-auto-pos</input>
	<output>/controls/flight/elevator</output>
	<max-rate-of-change>0.05</max-rate-of-change>
	<!-- should be done slowly to avoid distablising the trim position -->
    </filter>


    <!-- =============================================================== -->
    <!-- Throttle servo driver.                                          -->
    <!-- =============================================================== -->

    <!--
	The throttle is controlled in three ways:
	1. Manually: directly feeding off the thrust lever
	2. Auto-throttle: from the autopilot internal calculations
	3. Auto-thrust: from the calculated throttle settings
    -->

    <filter>
	<name>SERVO-DRIVER: throttle</name>
	<debug>false</debug>
	<type>noise-spike</type>
	<enable>
	    <condition>
		<property>/instrumentation/flightdirector/autothrottle-engage</property>
	    </condition>
	</enable>
	<!-- when the in auto-throttle, use the servo value -->
	<input>
	    <condition>
		<property>/instrumentation/fmc/throttle-lock</property>
	    </condition>
	    <property>/autopilot/internal/throttle-servo</property>
	</input>
	<!-- when in auto-thrust, use the lever value -->
	<input>
	    <property>/autopilot/internal/throttle-lever</property>
	</input>
	<output>
	    <property>/controls/engines/engine[0]/throttle</property>
	    <property>/controls/engines/engine[1]/throttle</property>
	    <property>/controls/engines/engine[2]/throttle</property>
	    <property>/controls/engines/engine[3]/throttle</property>
	</output>
	<max-rate-of-change>0.35</max-rate-of-change>
    </filter>

</PropertyList>
